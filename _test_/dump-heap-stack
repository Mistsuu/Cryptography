
heap-stack:     file format elf64-x86-64


Disassembly of section .interp:

0000000000000318 <.interp>:
 318:	2f                   	(bad)  
 319:	6c                   	ins    BYTE PTR es:[rdi],dx
 31a:	69 62 36 34 2f 6c 64 	imul   esp,DWORD PTR [rdx+0x36],0x646c2f34
 321:	2d 6c 69 6e 75       	sub    eax,0x756e696c
 326:	78 2d                	js     355 <_init-0xcab>
 328:	78 38                	js     362 <_init-0xc9e>
 32a:	36 2d 36 34 2e 73    	ss sub eax,0x732e3436
 330:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 331:	2e 32 00             	xor    al,BYTE PTR cs:[rax]

Disassembly of section .note.gnu.property:

0000000000000338 <.note.gnu.property>:
 338:	04 00                	add    al,0x0
 33a:	00 00                	add    BYTE PTR [rax],al
 33c:	10 00                	adc    BYTE PTR [rax],al
 33e:	00 00                	add    BYTE PTR [rax],al
 340:	05 00 00 00 47       	add    eax,0x47000000
 345:	4e 55                	rex.WRX push rbp
 347:	00 02                	add    BYTE PTR [rdx],al
 349:	00 00                	add    BYTE PTR [rax],al
 34b:	c0 04 00 00          	rol    BYTE PTR [rax+rax*1],0x0
 34f:	00 03                	add    BYTE PTR [rbx],al
 351:	00 00                	add    BYTE PTR [rax],al
 353:	00 00                	add    BYTE PTR [rax],al
 355:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .note.gnu.build-id:

0000000000000358 <.note.gnu.build-id>:
 358:	04 00                	add    al,0x0
 35a:	00 00                	add    BYTE PTR [rax],al
 35c:	14 00                	adc    al,0x0
 35e:	00 00                	add    BYTE PTR [rax],al
 360:	03 00                	add    eax,DWORD PTR [rax]
 362:	00 00                	add    BYTE PTR [rax],al
 364:	47                   	rex.RXB
 365:	4e 55                	rex.WRX push rbp
 367:	00 bd 08 28 c6 3b    	add    BYTE PTR [rbp+0x3bc62808],bh
 36d:	53                   	push   rbx
 36e:	7a 7e                	jp     3ee <_init-0xc12>
 370:	2f                   	(bad)  
 371:	10 f6                	adc    dh,dh
 373:	77 4e                	ja     3c3 <_init-0xc3d>
 375:	c4                   	(bad)  
 376:	0b 02                	or     eax,DWORD PTR [rdx]
 378:	0f 91 08             	setno  BYTE PTR [rax]
 37b:	c7                   	.byte 0xc7

Disassembly of section .note.ABI-tag:

000000000000037c <.note.ABI-tag>:
 37c:	04 00                	add    al,0x0
 37e:	00 00                	add    BYTE PTR [rax],al
 380:	10 00                	adc    BYTE PTR [rax],al
 382:	00 00                	add    BYTE PTR [rax],al
 384:	01 00                	add    DWORD PTR [rax],eax
 386:	00 00                	add    BYTE PTR [rax],al
 388:	47                   	rex.RXB
 389:	4e 55                	rex.WRX push rbp
 38b:	00 00                	add    BYTE PTR [rax],al
 38d:	00 00                	add    BYTE PTR [rax],al
 38f:	00 03                	add    BYTE PTR [rbx],al
 391:	00 00                	add    BYTE PTR [rax],al
 393:	00 02                	add    BYTE PTR [rdx],al
 395:	00 00                	add    BYTE PTR [rax],al
 397:	00 00                	add    BYTE PTR [rax],al
 399:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .gnu.hash:

00000000000003a0 <.gnu.hash>:
 3a0:	02 00                	add    al,BYTE PTR [rax]
 3a2:	00 00                	add    BYTE PTR [rax],al
 3a4:	0a 00                	or     al,BYTE PTR [rax]
 3a6:	00 00                	add    BYTE PTR [rax],al
 3a8:	01 00                	add    DWORD PTR [rax],eax
 3aa:	00 00                	add    BYTE PTR [rax],al
 3ac:	06                   	(bad)  
 3ad:	00 00                	add    BYTE PTR [rax],al
 3af:	00 00                	add    BYTE PTR [rax],al
 3b1:	00 81 00 00 00 00    	add    BYTE PTR [rcx+0x0],al
 3b7:	00 0a                	add    BYTE PTR [rdx],cl
 3b9:	00 00                	add    BYTE PTR [rax],al
 3bb:	00 00                	add    BYTE PTR [rax],al
 3bd:	00 00                	add    BYTE PTR [rax],al
 3bf:	00 d1                	add    cl,dl
 3c1:	65 ce                	gs (bad) 
 3c3:	6d                   	ins    DWORD PTR es:[rdi],dx

Disassembly of section .dynsym:

00000000000003c8 <.dynsym>:
	...
 3e0:	a0 00 00 00 12 00 00 	movabs al,ds:0x12000000
 3e7:	00 00 
	...
 3f5:	00 00                	add    BYTE PTR [rax],al
 3f7:	00 8f 00 00 00 12    	add    BYTE PTR [rdi+0x12000000],cl
	...
 40d:	00 00                	add    BYTE PTR [rax],al
 40f:	00 ad 00 00 00 12    	add    BYTE PTR [rbp+0x12000000],ch
	...
 425:	00 00                	add    BYTE PTR [rax],al
 427:	00 6d 00             	add    BYTE PTR [rbp+0x0],ch
 42a:	00 00                	add    BYTE PTR [rax],al
 42c:	12 00                	adc    al,BYTE PTR [rax]
	...
 43e:	00 00                	add    BYTE PTR [rax],al
 440:	1f                   	(bad)  
 441:	00 00                	add    BYTE PTR [rax],al
 443:	00 20                	add    BYTE PTR [rax],ah
	...
 455:	00 00                	add    BYTE PTR [rax],al
 457:	00 c3                	add    bl,al
 459:	00 00                	add    BYTE PTR [rax],al
 45b:	00 12                	add    BYTE PTR [rdx],dl
	...
 46d:	00 00                	add    BYTE PTR [rax],al
 46f:	00 10                	add    BYTE PTR [rax],dl
 471:	00 00                	add    BYTE PTR [rax],al
 473:	00 20                	add    BYTE PTR [rax],ah
	...
 485:	00 00                	add    BYTE PTR [rax],al
 487:	00 3b                	add    BYTE PTR [rbx],bh
 489:	00 00                	add    BYTE PTR [rax],al
 48b:	00 20                	add    BYTE PTR [rax],ah
	...
 49d:	00 00                	add    BYTE PTR [rax],al
 49f:	00 55 00             	add    BYTE PTR [rbp+0x0],dl
 4a2:	00 00                	add    BYTE PTR [rax],al
 4a4:	12 00                	adc    al,BYTE PTR [rax]
	...
 4b6:	00 00                	add    BYTE PTR [rax],al
 4b8:	b4 00                	mov    ah,0x0
 4ba:	00 00                	add    BYTE PTR [rax],al
 4bc:	22 00                	and    al,BYTE PTR [rax]
	...

Disassembly of section .dynstr:

00000000000004d0 <.dynstr>:
 4d0:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
 4d4:	73 74                	jae    54a <_init-0xab6>
 4d6:	64 63 2b             	movsxd ebp,DWORD PTR fs:[rbx]
 4d9:	2b 2e                	sub    ebp,DWORD PTR [rsi]
 4db:	73 6f                	jae    54c <_init-0xab4>
 4dd:	2e 36 00 5f 5f       	cs add BYTE PTR ss:[rdi+0x5f],bl
 4e2:	67 6d                	ins    DWORD PTR es:[edi],dx
 4e4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 4e5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 4e6:	5f                   	pop    rdi
 4e7:	73 74                	jae    55d <_init-0xaa3>
 4e9:	61                   	(bad)  
 4ea:	72 74                	jb     560 <_init-0xaa0>
 4ec:	5f                   	pop    rdi
 4ed:	5f                   	pop    rdi
 4ee:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
 4f1:	54                   	push   rsp
 4f2:	4d 5f                	rex.WRB pop r15
 4f4:	64 65 72 65          	fs gs jb 55d <_init-0xaa3>
 4f8:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 4ff:	4d 
 500:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 502:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 503:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 504:	65 54                	gs push rsp
 506:	61                   	(bad)  
 507:	62                   	(bad)  
 508:	6c                   	ins    BYTE PTR es:[rdi],dx
 509:	65 00 5f 49          	add    BYTE PTR gs:[rdi+0x49],bl
 50d:	54                   	push   rsp
 50e:	4d 5f                	rex.WRB pop r15
 510:	72 65                	jb     577 <_init-0xa89>
 512:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 519:	4d 
 51a:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 51c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 51d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 51e:	65 54                	gs push rsp
 520:	61                   	(bad)  
 521:	62                   	(bad)  
 522:	6c                   	ins    BYTE PTR es:[rdi],dx
 523:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
 527:	4e 53                	rex.WRX push rbx
 529:	74 38                	je     563 <_init-0xa9d>
 52b:	69 6f 73 5f 62 61 73 	imul   ebp,DWORD PTR [rdi+0x73],0x7361625f
 532:	65 34 49             	gs xor al,0x49
 535:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 536:	69 74 44 31 45 76 00 	imul   esi,DWORD PTR [rsp+rax*2+0x31],0x5f007645
 53d:	5f 
 53e:	5a                   	pop    rdx
 53f:	4e 53                	rex.WRX push rbx
 541:	74 38                	je     57b <_init-0xa85>
 543:	69 6f 73 5f 62 61 73 	imul   ebp,DWORD PTR [rdi+0x73],0x7361625f
 54a:	65 34 49             	gs xor al,0x49
 54d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 54e:	69 74 43 31 45 76 00 	imul   esi,DWORD PTR [rbx+rax*2+0x31],0x6c007645
 555:	6c 
 556:	69 62 63 2e 73 6f 2e 	imul   esp,DWORD PTR [rdx+0x63],0x2e6f732e
 55d:	36 00 5f 5f          	add    BYTE PTR ss:[rdi+0x5f],bl
 561:	73 74                	jae    5d7 <_init-0xa29>
 563:	61                   	(bad)  
 564:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
 567:	63 68 6b             	movsxd ebp,DWORD PTR [rax+0x6b]
 56a:	5f                   	pop    rdi
 56b:	66 61                	data16 (bad) 
 56d:	69 6c 00 5f 5f 63 78 	imul   ebp,DWORD PTR [rax+rax*1+0x5f],0x6178635f
 574:	61 
 575:	5f                   	pop    rdi
 576:	61                   	(bad)  
 577:	74 65                	je     5de <_init-0xa22>
 579:	78 69                	js     5e4 <_init-0xa1c>
 57b:	74 00                	je     57d <_init-0xa83>
 57d:	6d                   	ins    DWORD PTR es:[rdi],dx
 57e:	61                   	(bad)  
 57f:	6c                   	ins    BYTE PTR es:[rdi],dx
 580:	6c                   	ins    BYTE PTR es:[rdi],dx
 581:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 582:	63 00                	movsxd eax,DWORD PTR [rax]
 584:	5f                   	pop    rdi
 585:	5f                   	pop    rdi
 586:	63 78 61             	movsxd edi,DWORD PTR [rax+0x61]
 589:	5f                   	pop    rdi
 58a:	66 69 6e 61 6c 69    	imul   bp,WORD PTR [rsi+0x61],0x696c
 590:	7a 65                	jp     5f7 <_init-0xa09>
 592:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 595:	6c                   	ins    BYTE PTR es:[rdi],dx
 596:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [rdx+0x63],0x6174735f
 59d:	72 74                	jb     613 <_init-0x9ed>
 59f:	5f                   	pop    rdi
 5a0:	6d                   	ins    DWORD PTR es:[rdi],dx
 5a1:	61                   	(bad)  
 5a2:	69 6e 00 47 4c 49 42 	imul   ebp,DWORD PTR [rsi+0x0],0x42494c47
 5a9:	43 58                	rex.XB pop r8
 5ab:	58                   	pop    rax
 5ac:	5f                   	pop    rdi
 5ad:	33 2e                	xor    ebp,DWORD PTR [rsi]
 5af:	34 00                	xor    al,0x0
 5b1:	47                   	rex.RXB
 5b2:	4c                   	rex.WR
 5b3:	49                   	rex.WB
 5b4:	42                   	rex.X
 5b5:	43 5f                	rex.XB pop r15
 5b7:	32 2e                	xor    ch,BYTE PTR [rsi]
 5b9:	34 00                	xor    al,0x0
 5bb:	47                   	rex.RXB
 5bc:	4c                   	rex.WR
 5bd:	49                   	rex.WB
 5be:	42                   	rex.X
 5bf:	43 5f                	rex.XB pop r15
 5c1:	32 2e                	xor    ch,BYTE PTR [rsi]
 5c3:	32 2e                	xor    ch,BYTE PTR [rsi]
 5c5:	35                   	.byte 0x35
	...

Disassembly of section .gnu.version:

00000000000005c8 <.gnu.version>:
 5c8:	00 00                	add    BYTE PTR [rax],al
 5ca:	02 00                	add    al,BYTE PTR [rax]
 5cc:	03 00                	add    eax,DWORD PTR [rax]
 5ce:	02 00                	add    al,BYTE PTR [rax]
 5d0:	04 00                	add    al,0x0
 5d2:	00 00                	add    BYTE PTR [rax],al
 5d4:	02 00                	add    al,BYTE PTR [rax]
 5d6:	00 00                	add    BYTE PTR [rax],al
 5d8:	00 00                	add    BYTE PTR [rax],al
 5da:	04 00                	add    al,0x0
 5dc:	02 00                	add    al,BYTE PTR [rax]

Disassembly of section .gnu.version_r:

00000000000005e0 <.gnu.version_r>:
 5e0:	01 00                	add    DWORD PTR [rax],eax
 5e2:	01 00                	add    DWORD PTR [rax],eax
 5e4:	01 00                	add    DWORD PTR [rax],eax
 5e6:	00 00                	add    BYTE PTR [rax],al
 5e8:	10 00                	adc    BYTE PTR [rax],al
 5ea:	00 00                	add    BYTE PTR [rax],al
 5ec:	20 00                	and    BYTE PTR [rax],al
 5ee:	00 00                	add    BYTE PTR [rax],al
 5f0:	74 29                	je     61b <_init-0x9e5>
 5f2:	92                   	xchg   edx,eax
 5f3:	08 00                	or     BYTE PTR [rax],al
 5f5:	00 04 00             	add    BYTE PTR [rax+rax*1],al
 5f8:	d5                   	(bad)  
 5f9:	00 00                	add    BYTE PTR [rax],al
 5fb:	00 00                	add    BYTE PTR [rax],al
 5fd:	00 00                	add    BYTE PTR [rax],al
 5ff:	00 01                	add    BYTE PTR [rcx],al
 601:	00 02                	add    BYTE PTR [rdx],al
 603:	00 85 00 00 00 10    	add    BYTE PTR [rbp+0x10000000],al
 609:	00 00                	add    BYTE PTR [rax],al
 60b:	00 00                	add    BYTE PTR [rax],al
 60d:	00 00                	add    BYTE PTR [rax],al
 60f:	00 14 69             	add    BYTE PTR [rcx+rbp*2],dl
 612:	69 0d 00 00 03 00 e1 	imul   ecx,DWORD PTR [rip+0x30000],0xe1        # 3061c <_end+0x2c604>
 619:	00 00 00 
 61c:	10 00                	adc    BYTE PTR [rax],al
 61e:	00 00                	add    BYTE PTR [rax],al
 620:	75 1a                	jne    63c <_init-0x9c4>
 622:	69 09 00 00 02 00    	imul   ecx,DWORD PTR [rcx],0x20000
 628:	eb 00                	jmp    62a <_init-0x9d6>
 62a:	00 00                	add    BYTE PTR [rax],al
 62c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .rela.dyn:

0000000000000630 <.rela.dyn>:
 630:	80 3d 00 00 00 00 00 	cmp    BYTE PTR [rip+0x0],0x0        # 637 <_init-0x9c9>
 637:	00 08                	add    BYTE PTR [rax],cl
 639:	00 00                	add    BYTE PTR [rax],al
 63b:	00 00                	add    BYTE PTR [rax],al
 63d:	00 00                	add    BYTE PTR [rax],al
 63f:	00 a0 11 00 00 00    	add    BYTE PTR [rax+0x11],ah
 645:	00 00                	add    BYTE PTR [rax],al
 647:	00 88 3d 00 00 00    	add    BYTE PTR [rax+0x3d],cl
 64d:	00 00                	add    BYTE PTR [rax],al
 64f:	00 08                	add    BYTE PTR [rax],cl
 651:	00 00                	add    BYTE PTR [rax],al
 653:	00 00                	add    BYTE PTR [rax],al
 655:	00 00                	add    BYTE PTR [rax],al
 657:	00 cb                	add    bl,cl
 659:	12 00                	adc    al,BYTE PTR [rax]
 65b:	00 00                	add    BYTE PTR [rax],al
 65d:	00 00                	add    BYTE PTR [rax],al
 65f:	00 90 3d 00 00 00    	add    BYTE PTR [rax+0x3d],dl
 665:	00 00                	add    BYTE PTR [rax],al
 667:	00 08                	add    BYTE PTR [rax],cl
 669:	00 00                	add    BYTE PTR [rax],al
 66b:	00 00                	add    BYTE PTR [rax],al
 66d:	00 00                	add    BYTE PTR [rax],al
 66f:	00 60 11             	add    BYTE PTR [rax+0x11],ah
 672:	00 00                	add    BYTE PTR [rax],al
 674:	00 00                	add    BYTE PTR [rax],al
 676:	00 00                	add    BYTE PTR [rax],al
 678:	08 40 00             	or     BYTE PTR [rax+0x0],al
 67b:	00 00                	add    BYTE PTR [rax],al
 67d:	00 00                	add    BYTE PTR [rax],al
 67f:	00 08                	add    BYTE PTR [rax],cl
 681:	00 00                	add    BYTE PTR [rax],al
 683:	00 00                	add    BYTE PTR [rax],al
 685:	00 00                	add    BYTE PTR [rax],al
 687:	00 08                	add    BYTE PTR [rax],cl
 689:	40 00 00             	add    BYTE PTR [rax],al
 68c:	00 00                	add    BYTE PTR [rax],al
 68e:	00 00                	add    BYTE PTR [rax],al
 690:	d0 3f                	sar    BYTE PTR [rdi],1
 692:	00 00                	add    BYTE PTR [rax],al
 694:	00 00                	add    BYTE PTR [rax],al
 696:	00 00                	add    BYTE PTR [rax],al
 698:	06                   	(bad)  
 699:	00 00                	add    BYTE PTR [rax],al
 69b:	00 0a                	add    BYTE PTR [rdx],cl
	...
 6a5:	00 00                	add    BYTE PTR [rax],al
 6a7:	00 d8                	add    al,bl
 6a9:	3f                   	(bad)  
 6aa:	00 00                	add    BYTE PTR [rax],al
 6ac:	00 00                	add    BYTE PTR [rax],al
 6ae:	00 00                	add    BYTE PTR [rax],al
 6b0:	06                   	(bad)  
 6b1:	00 00                	add    BYTE PTR [rax],al
 6b3:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 6b9 <_init-0x947>
 6b9:	00 00                	add    BYTE PTR [rax],al
 6bb:	00 00                	add    BYTE PTR [rax],al
 6bd:	00 00                	add    BYTE PTR [rax],al
 6bf:	00 e0                	add    al,ah
 6c1:	3f                   	(bad)  
 6c2:	00 00                	add    BYTE PTR [rax],al
 6c4:	00 00                	add    BYTE PTR [rax],al
 6c6:	00 00                	add    BYTE PTR [rax],al
 6c8:	06                   	(bad)  
 6c9:	00 00                	add    BYTE PTR [rax],al
 6cb:	00 06                	add    BYTE PTR [rsi],al
	...
 6d5:	00 00                	add    BYTE PTR [rax],al
 6d7:	00 e8                	add    al,ch
 6d9:	3f                   	(bad)  
 6da:	00 00                	add    BYTE PTR [rax],al
 6dc:	00 00                	add    BYTE PTR [rax],al
 6de:	00 00                	add    BYTE PTR [rax],al
 6e0:	06                   	(bad)  
 6e1:	00 00                	add    BYTE PTR [rax],al
 6e3:	00 07                	add    BYTE PTR [rdi],al
	...
 6ed:	00 00                	add    BYTE PTR [rax],al
 6ef:	00 f0                	add    al,dh
 6f1:	3f                   	(bad)  
 6f2:	00 00                	add    BYTE PTR [rax],al
 6f4:	00 00                	add    BYTE PTR [rax],al
 6f6:	00 00                	add    BYTE PTR [rax],al
 6f8:	06                   	(bad)  
 6f9:	00 00                	add    BYTE PTR [rax],al
 6fb:	00 08                	add    BYTE PTR [rax],cl
	...
 705:	00 00                	add    BYTE PTR [rax],al
 707:	00 f8                	add    al,bh
 709:	3f                   	(bad)  
 70a:	00 00                	add    BYTE PTR [rax],al
 70c:	00 00                	add    BYTE PTR [rax],al
 70e:	00 00                	add    BYTE PTR [rax],al
 710:	06                   	(bad)  
 711:	00 00                	add    BYTE PTR [rax],al
 713:	00 09                	add    BYTE PTR [rcx],cl
	...

Disassembly of section .rela.plt:

0000000000000720 <.rela.plt>:
 720:	b0 3f                	mov    al,0x3f
 722:	00 00                	add    BYTE PTR [rax],al
 724:	00 00                	add    BYTE PTR [rax],al
 726:	00 00                	add    BYTE PTR [rax],al
 728:	07                   	(bad)  
 729:	00 00                	add    BYTE PTR [rax],al
 72b:	00 01                	add    BYTE PTR [rcx],al
	...
 735:	00 00                	add    BYTE PTR [rax],al
 737:	00 b8 3f 00 00 00    	add    BYTE PTR [rax+0x3f],bh
 73d:	00 00                	add    BYTE PTR [rax],al
 73f:	00 07                	add    BYTE PTR [rdi],al
 741:	00 00                	add    BYTE PTR [rax],al
 743:	00 02                	add    BYTE PTR [rdx],al
	...
 74d:	00 00                	add    BYTE PTR [rax],al
 74f:	00 c0                	add    al,al
 751:	3f                   	(bad)  
 752:	00 00                	add    BYTE PTR [rax],al
 754:	00 00                	add    BYTE PTR [rax],al
 756:	00 00                	add    BYTE PTR [rax],al
 758:	07                   	(bad)  
 759:	00 00                	add    BYTE PTR [rax],al
 75b:	00 03                	add    BYTE PTR [rbx],al
	...
 765:	00 00                	add    BYTE PTR [rax],al
 767:	00 c8                	add    al,cl
 769:	3f                   	(bad)  
 76a:	00 00                	add    BYTE PTR [rax],al
 76c:	00 00                	add    BYTE PTR [rax],al
 76e:	00 00                	add    BYTE PTR [rax],al
 770:	07                   	(bad)  
 771:	00 00                	add    BYTE PTR [rax],al
 773:	00 04 00             	add    BYTE PTR [rax+rax*1],al
	...

Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    rsp,0x8
    1008:	48 8b 05 d9 2f 00 00 	mov    rax,QWORD PTR [rip+0x2fd9]        # 3fe8 <__gmon_start__>
    100f:	48 85 c0             	test   rax,rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   rax
    1016:	48 83 c4 08          	add    rsp,0x8
    101a:	c3                   	ret    

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 7a 2f 00 00    	push   QWORD PTR [rip+0x2f7a]        # 3fa0 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 7b 2f 00 00 	bnd jmp QWORD PTR [rip+0x2f7b]        # 3fa8 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nop    DWORD PTR [rax]
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	push   0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmp 1020 <.plt>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	push   0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmp 1020 <.plt>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64 
    1054:	68 02 00 00 00       	push   0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmp 1020 <.plt>
    105f:	90                   	nop
    1060:	f3 0f 1e fa          	endbr64 
    1064:	68 03 00 00 00       	push   0x3
    1069:	f2 e9 b1 ff ff ff    	bnd jmp 1020 <.plt>
    106f:	90                   	nop

Disassembly of section .plt.got:

0000000000001070 <__cxa_finalize@plt>:
    1070:	f3 0f 1e fa          	endbr64 
    1074:	f2 ff 25 55 2f 00 00 	bnd jmp QWORD PTR [rip+0x2f55]        # 3fd0 <__cxa_finalize@GLIBC_2.2.5>
    107b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .plt.sec:

0000000000001080 <__cxa_atexit@plt>:
    1080:	f3 0f 1e fa          	endbr64 
    1084:	f2 ff 25 25 2f 00 00 	bnd jmp QWORD PTR [rip+0x2f25]        # 3fb0 <__cxa_atexit@GLIBC_2.2.5>
    108b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001090 <__stack_chk_fail@plt>:
    1090:	f3 0f 1e fa          	endbr64 
    1094:	f2 ff 25 1d 2f 00 00 	bnd jmp QWORD PTR [rip+0x2f1d]        # 3fb8 <__stack_chk_fail@GLIBC_2.4>
    109b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000010a0 <malloc@plt>:
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	f2 ff 25 15 2f 00 00 	bnd jmp QWORD PTR [rip+0x2f15]        # 3fc0 <malloc@GLIBC_2.2.5>
    10ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000010b0 <_ZNSt8ios_base4InitC1Ev@plt>:
    10b0:	f3 0f 1e fa          	endbr64 
    10b4:	f2 ff 25 0d 2f 00 00 	bnd jmp QWORD PTR [rip+0x2f0d]        # 3fc8 <_ZNSt8ios_base4InitC1Ev@GLIBCXX_3.4>
    10bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

00000000000010c0 <_start>:
    10c0:	f3 0f 1e fa          	endbr64 
    10c4:	31 ed                	xor    ebp,ebp
    10c6:	49 89 d1             	mov    r9,rdx
    10c9:	5e                   	pop    rsi
    10ca:	48 89 e2             	mov    rdx,rsp
    10cd:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
    10d1:	50                   	push   rax
    10d2:	54                   	push   rsp
    10d3:	4c 8d 05 86 02 00 00 	lea    r8,[rip+0x286]        # 1360 <__libc_csu_fini>
    10da:	48 8d 0d 0f 02 00 00 	lea    rcx,[rip+0x20f]        # 12f0 <__libc_csu_init>
    10e1:	48 8d 3d c1 00 00 00 	lea    rdi,[rip+0xc1]        # 11a9 <main>
    10e8:	ff 15 f2 2e 00 00    	call   QWORD PTR [rip+0x2ef2]        # 3fe0 <__libc_start_main@GLIBC_2.2.5>
    10ee:	f4                   	hlt    
    10ef:	90                   	nop

00000000000010f0 <deregister_tm_clones>:
    10f0:	48 8d 3d 19 2f 00 00 	lea    rdi,[rip+0x2f19]        # 4010 <__TMC_END__>
    10f7:	48 8d 05 12 2f 00 00 	lea    rax,[rip+0x2f12]        # 4010 <__TMC_END__>
    10fe:	48 39 f8             	cmp    rax,rdi
    1101:	74 15                	je     1118 <deregister_tm_clones+0x28>
    1103:	48 8b 05 ce 2e 00 00 	mov    rax,QWORD PTR [rip+0x2ece]        # 3fd8 <_ITM_deregisterTMCloneTable>
    110a:	48 85 c0             	test   rax,rax
    110d:	74 09                	je     1118 <deregister_tm_clones+0x28>
    110f:	ff e0                	jmp    rax
    1111:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    1118:	c3                   	ret    
    1119:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000001120 <register_tm_clones>:
    1120:	48 8d 3d e9 2e 00 00 	lea    rdi,[rip+0x2ee9]        # 4010 <__TMC_END__>
    1127:	48 8d 35 e2 2e 00 00 	lea    rsi,[rip+0x2ee2]        # 4010 <__TMC_END__>
    112e:	48 29 fe             	sub    rsi,rdi
    1131:	48 89 f0             	mov    rax,rsi
    1134:	48 c1 ee 3f          	shr    rsi,0x3f
    1138:	48 c1 f8 03          	sar    rax,0x3
    113c:	48 01 c6             	add    rsi,rax
    113f:	48 d1 fe             	sar    rsi,1
    1142:	74 14                	je     1158 <register_tm_clones+0x38>
    1144:	48 8b 05 a5 2e 00 00 	mov    rax,QWORD PTR [rip+0x2ea5]        # 3ff0 <_ITM_registerTMCloneTable>
    114b:	48 85 c0             	test   rax,rax
    114e:	74 08                	je     1158 <register_tm_clones+0x38>
    1150:	ff e0                	jmp    rax
    1152:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    1158:	c3                   	ret    
    1159:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000001160 <__do_global_dtors_aux>:
    1160:	f3 0f 1e fa          	endbr64 
    1164:	80 3d a5 2e 00 00 00 	cmp    BYTE PTR [rip+0x2ea5],0x0        # 4010 <__TMC_END__>
    116b:	75 2b                	jne    1198 <__do_global_dtors_aux+0x38>
    116d:	55                   	push   rbp
    116e:	48 83 3d 5a 2e 00 00 	cmp    QWORD PTR [rip+0x2e5a],0x0        # 3fd0 <__cxa_finalize@GLIBC_2.2.5>
    1175:	00 
    1176:	48 89 e5             	mov    rbp,rsp
    1179:	74 0c                	je     1187 <__do_global_dtors_aux+0x27>
    117b:	48 8b 3d 86 2e 00 00 	mov    rdi,QWORD PTR [rip+0x2e86]        # 4008 <__dso_handle>
    1182:	e8 e9 fe ff ff       	call   1070 <__cxa_finalize@plt>
    1187:	e8 64 ff ff ff       	call   10f0 <deregister_tm_clones>
    118c:	c6 05 7d 2e 00 00 01 	mov    BYTE PTR [rip+0x2e7d],0x1        # 4010 <__TMC_END__>
    1193:	5d                   	pop    rbp
    1194:	c3                   	ret    
    1195:	0f 1f 00             	nop    DWORD PTR [rax]
    1198:	c3                   	ret    
    1199:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000000011a0 <frame_dummy>:
    11a0:	f3 0f 1e fa          	endbr64 
    11a4:	e9 77 ff ff ff       	jmp    1120 <register_tm_clones>

00000000000011a9 <main>:
    11a9:	f3 0f 1e fa          	endbr64 
    11ad:	55                   	push   rbp
    11ae:	48 89 e5             	mov    rbp,rsp
    11b1:	4c 8d 9c 24 00 80 ff 	lea    r11,[rsp-0x8000]
    11b8:	ff 
    11b9:	48 81 ec 00 10 00 00 	sub    rsp,0x1000
    11c0:	48 83 0c 24 00       	or     QWORD PTR [rsp],0x0
    11c5:	4c 39 dc             	cmp    rsp,r11
    11c8:	75 ef                	jne    11b9 <main+0x10>
    11ca:	48 83 ec 20          	sub    rsp,0x20
    11ce:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    11d5:	00 00 
    11d7:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    11db:	31 c0                	xor    eax,eax
    11dd:	bf 00 80 00 00       	mov    edi,0x8000
    11e2:	e8 b9 fe ff ff       	call   10a0 <malloc@plt>
    11e7:	48 89 85 e8 7f ff ff 	mov    QWORD PTR [rbp-0x8018],rax
    11ee:	c7 85 e0 7f ff ff 00 	mov    DWORD PTR [rbp-0x8020],0x0
    11f5:	00 00 00 
    11f8:	81 bd e0 7f ff ff ff 	cmp    DWORD PTR [rbp-0x8020],0x1fff
    11ff:	1f 00 00 
    1202:	7f 1e                	jg     1222 <main+0x79>
    1204:	8b 85 e0 7f ff ff    	mov    eax,DWORD PTR [rbp-0x8020]
    120a:	48 98                	cdqe   
    120c:	8b 95 e0 7f ff ff    	mov    edx,DWORD PTR [rbp-0x8020]
    1212:	89 94 85 f0 7f ff ff 	mov    DWORD PTR [rbp+rax*4-0x8010],edx
    1219:	83 85 e0 7f ff ff 01 	add    DWORD PTR [rbp-0x8020],0x1
    1220:	eb d6                	jmp    11f8 <main+0x4f>
    1222:	c7 85 e4 7f ff ff 00 	mov    DWORD PTR [rbp-0x801c],0x0
    1229:	00 00 00 
    122c:	81 bd e4 7f ff ff ff 	cmp    DWORD PTR [rbp-0x801c],0x1fff
    1233:	1f 00 00 
    1236:	7f 2b                	jg     1263 <main+0xba>
    1238:	8b 85 e4 7f ff ff    	mov    eax,DWORD PTR [rbp-0x801c]
    123e:	48 98                	cdqe   
    1240:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    1247:	00 
    1248:	48 8b 85 e8 7f ff ff 	mov    rax,QWORD PTR [rbp-0x8018]
    124f:	48 01 c2             	add    rdx,rax
    1252:	8b 85 e4 7f ff ff    	mov    eax,DWORD PTR [rbp-0x801c]
    1258:	89 02                	mov    DWORD PTR [rdx],eax
    125a:	83 85 e4 7f ff ff 01 	add    DWORD PTR [rbp-0x801c],0x1
    1261:	eb c9                	jmp    122c <main+0x83>
    1263:	b8 00 00 00 00       	mov    eax,0x0
    1268:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    126c:	64 48 33 0c 25 28 00 	xor    rcx,QWORD PTR fs:0x28
    1273:	00 00 
    1275:	74 05                	je     127c <main+0xd3>
    1277:	e8 14 fe ff ff       	call   1090 <__stack_chk_fail@plt>
    127c:	c9                   	leave  
    127d:	c3                   	ret    

000000000000127e <_Z41__static_initialization_and_destruction_0ii>:
    127e:	f3 0f 1e fa          	endbr64 
    1282:	55                   	push   rbp
    1283:	48 89 e5             	mov    rbp,rsp
    1286:	48 83 ec 10          	sub    rsp,0x10
    128a:	89 7d fc             	mov    DWORD PTR [rbp-0x4],edi
    128d:	89 75 f8             	mov    DWORD PTR [rbp-0x8],esi
    1290:	83 7d fc 01          	cmp    DWORD PTR [rbp-0x4],0x1
    1294:	75 32                	jne    12c8 <_Z41__static_initialization_and_destruction_0ii+0x4a>
    1296:	81 7d f8 ff ff 00 00 	cmp    DWORD PTR [rbp-0x8],0xffff
    129d:	75 29                	jne    12c8 <_Z41__static_initialization_and_destruction_0ii+0x4a>
    129f:	48 8d 3d 6b 2d 00 00 	lea    rdi,[rip+0x2d6b]        # 4011 <_ZStL8__ioinit>
    12a6:	e8 05 fe ff ff       	call   10b0 <_ZNSt8ios_base4InitC1Ev@plt>
    12ab:	48 8d 15 56 2d 00 00 	lea    rdx,[rip+0x2d56]        # 4008 <__dso_handle>
    12b2:	48 8d 35 58 2d 00 00 	lea    rsi,[rip+0x2d58]        # 4011 <_ZStL8__ioinit>
    12b9:	48 8b 05 38 2d 00 00 	mov    rax,QWORD PTR [rip+0x2d38]        # 3ff8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    12c0:	48 89 c7             	mov    rdi,rax
    12c3:	e8 b8 fd ff ff       	call   1080 <__cxa_atexit@plt>
    12c8:	90                   	nop
    12c9:	c9                   	leave  
    12ca:	c3                   	ret    

00000000000012cb <_GLOBAL__sub_I_main>:
    12cb:	f3 0f 1e fa          	endbr64 
    12cf:	55                   	push   rbp
    12d0:	48 89 e5             	mov    rbp,rsp
    12d3:	be ff ff 00 00       	mov    esi,0xffff
    12d8:	bf 01 00 00 00       	mov    edi,0x1
    12dd:	e8 9c ff ff ff       	call   127e <_Z41__static_initialization_and_destruction_0ii>
    12e2:	5d                   	pop    rbp
    12e3:	c3                   	ret    
    12e4:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    12eb:	00 00 00 
    12ee:	66 90                	xchg   ax,ax

00000000000012f0 <__libc_csu_init>:
    12f0:	f3 0f 1e fa          	endbr64 
    12f4:	41 57                	push   r15
    12f6:	4c 8d 3d 83 2a 00 00 	lea    r15,[rip+0x2a83]        # 3d80 <__frame_dummy_init_array_entry>
    12fd:	41 56                	push   r14
    12ff:	49 89 d6             	mov    r14,rdx
    1302:	41 55                	push   r13
    1304:	49 89 f5             	mov    r13,rsi
    1307:	41 54                	push   r12
    1309:	41 89 fc             	mov    r12d,edi
    130c:	55                   	push   rbp
    130d:	48 8d 2d 7c 2a 00 00 	lea    rbp,[rip+0x2a7c]        # 3d90 <__do_global_dtors_aux_fini_array_entry>
    1314:	53                   	push   rbx
    1315:	4c 29 fd             	sub    rbp,r15
    1318:	48 83 ec 08          	sub    rsp,0x8
    131c:	e8 df fc ff ff       	call   1000 <_init>
    1321:	48 c1 fd 03          	sar    rbp,0x3
    1325:	74 1f                	je     1346 <__libc_csu_init+0x56>
    1327:	31 db                	xor    ebx,ebx
    1329:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    1330:	4c 89 f2             	mov    rdx,r14
    1333:	4c 89 ee             	mov    rsi,r13
    1336:	44 89 e7             	mov    edi,r12d
    1339:	41 ff 14 df          	call   QWORD PTR [r15+rbx*8]
    133d:	48 83 c3 01          	add    rbx,0x1
    1341:	48 39 dd             	cmp    rbp,rbx
    1344:	75 ea                	jne    1330 <__libc_csu_init+0x40>
    1346:	48 83 c4 08          	add    rsp,0x8
    134a:	5b                   	pop    rbx
    134b:	5d                   	pop    rbp
    134c:	41 5c                	pop    r12
    134e:	41 5d                	pop    r13
    1350:	41 5e                	pop    r14
    1352:	41 5f                	pop    r15
    1354:	c3                   	ret    
    1355:	66 66 2e 0f 1f 84 00 	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    135c:	00 00 00 00 

0000000000001360 <__libc_csu_fini>:
    1360:	f3 0f 1e fa          	endbr64 
    1364:	c3                   	ret    

Disassembly of section .fini:

0000000000001368 <_fini>:
    1368:	f3 0f 1e fa          	endbr64 
    136c:	48 83 ec 08          	sub    rsp,0x8
    1370:	48 83 c4 08          	add    rsp,0x8
    1374:	c3                   	ret    

Disassembly of section .rodata:

0000000000002000 <_IO_stdin_used>:
    2000:	01 00                	add    DWORD PTR [rax],eax
    2002:	02 00                	add    al,BYTE PTR [rax]

0000000000002004 <_ZStL19piecewise_construct>:
	...

Disassembly of section .eh_frame_hdr:

0000000000002008 <__GNU_EH_FRAME_HDR>:
    2008:	01 1b                	add    DWORD PTR [rbx],ebx
    200a:	03 3b                	add    edi,DWORD PTR [rbx]
    200c:	54                   	push   rsp
    200d:	00 00                	add    BYTE PTR [rax],al
    200f:	00 09                	add    BYTE PTR [rcx],cl
    2011:	00 00                	add    BYTE PTR [rax],al
    2013:	00 18                	add    BYTE PTR [rax],bl
    2015:	f0 ff                	lock (bad) 
    2017:	ff 88 00 00 00 68    	dec    DWORD PTR [rax+0x68000000]
    201d:	f0 ff                	lock (bad) 
    201f:	ff b0 00 00 00 78    	push   QWORD PTR [rax+0x78000000]
    2025:	f0 ff                	lock (bad) 
    2027:	ff c8                	dec    eax
    2029:	00 00                	add    BYTE PTR [rax],al
    202b:	00 b8 f0 ff ff 70    	add    BYTE PTR [rax+0x70fffff0],bh
    2031:	00 00                	add    BYTE PTR [rax],al
    2033:	00 a1 f1 ff ff e0    	add    BYTE PTR [rcx-0x1f00000f],ah
    2039:	00 00                	add    BYTE PTR [rax],al
    203b:	00 76 f2             	add    BYTE PTR [rsi-0xe],dh
    203e:	ff                   	(bad)  
    203f:	ff 00                	inc    DWORD PTR [rax]
    2041:	01 00                	add    DWORD PTR [rax],eax
    2043:	00 c3                	add    bl,al
    2045:	f2 ff                	repnz (bad) 
    2047:	ff 20                	jmp    QWORD PTR [rax]
    2049:	01 00                	add    DWORD PTR [rax],eax
    204b:	00 e8                	add    al,ch
    204d:	f2 ff                	repnz (bad) 
    204f:	ff 40 01             	inc    DWORD PTR [rax+0x1]
    2052:	00 00                	add    BYTE PTR [rax],al
    2054:	58                   	pop    rax
    2055:	f3 ff                	repz (bad) 
    2057:	ff                   	.byte 0xff
    2058:	88 01                	mov    BYTE PTR [rcx],al
	...

Disassembly of section .eh_frame:

0000000000002060 <__FRAME_END__-0x144>:
    2060:	14 00                	adc    al,0x0
    2062:	00 00                	add    BYTE PTR [rax],al
    2064:	00 00                	add    BYTE PTR [rax],al
    2066:	00 00                	add    BYTE PTR [rax],al
    2068:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
    206b:	00 01                	add    BYTE PTR [rcx],al
    206d:	78 10                	js     207f <__GNU_EH_FRAME_HDR+0x77>
    206f:	01 1b                	add    DWORD PTR [rbx],ebx
    2071:	0c 07                	or     al,0x7
    2073:	08 90 01 00 00 14    	or     BYTE PTR [rax+0x14000001],dl
    2079:	00 00                	add    BYTE PTR [rax],al
    207b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    207e:	00 00                	add    BYTE PTR [rax],al
    2080:	40                   	rex
    2081:	f0 ff                	lock (bad) 
    2083:	ff 2f                	jmp    FWORD PTR [rdi]
    2085:	00 00                	add    BYTE PTR [rax],al
    2087:	00 00                	add    BYTE PTR [rax],al
    2089:	44 07                	rex.R (bad) 
    208b:	10 00                	adc    BYTE PTR [rax],al
    208d:	00 00                	add    BYTE PTR [rax],al
    208f:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
    2092:	00 00                	add    BYTE PTR [rax],al
    2094:	34 00                	xor    al,0x0
    2096:	00 00                	add    BYTE PTR [rax],al
    2098:	88 ef                	mov    bh,ch
    209a:	ff                   	(bad)  
    209b:	ff 50 00             	call   QWORD PTR [rax+0x0]
    209e:	00 00                	add    BYTE PTR [rax],al
    20a0:	00 0e                	add    BYTE PTR [rsi],cl
    20a2:	10 46 0e             	adc    BYTE PTR [rsi+0xe],al
    20a5:	18 4a 0f             	sbb    BYTE PTR [rdx+0xf],cl
    20a8:	0b 77 08             	or     esi,DWORD PTR [rdi+0x8]
    20ab:	80 00 3f             	add    BYTE PTR [rax],0x3f
    20ae:	1a 3a                	sbb    bh,BYTE PTR [rdx]
    20b0:	2a 33                	sub    dh,BYTE PTR [rbx]
    20b2:	24 22                	and    al,0x22
    20b4:	00 00                	add    BYTE PTR [rax],al
    20b6:	00 00                	add    BYTE PTR [rax],al
    20b8:	14 00                	adc    al,0x0
    20ba:	00 00                	add    BYTE PTR [rax],al
    20bc:	5c                   	pop    rsp
    20bd:	00 00                	add    BYTE PTR [rax],al
    20bf:	00 b0 ef ff ff 10    	add    BYTE PTR [rax+0x10ffffef],dh
	...
    20cd:	00 00                	add    BYTE PTR [rax],al
    20cf:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
    20d2:	00 00                	add    BYTE PTR [rax],al
    20d4:	74 00                	je     20d6 <__GNU_EH_FRAME_HDR+0xce>
    20d6:	00 00                	add    BYTE PTR [rax],al
    20d8:	a8 ef                	test   al,0xef
    20da:	ff                   	(bad)  
    20db:	ff 40 00             	inc    DWORD PTR [rax+0x0]
	...
    20e6:	00 00                	add    BYTE PTR [rax],al
    20e8:	1c 00                	sbb    al,0x0
    20ea:	00 00                	add    BYTE PTR [rax],al
    20ec:	8c 00                	mov    WORD PTR [rax],es
    20ee:	00 00                	add    BYTE PTR [rax],al
    20f0:	b9 f0 ff ff d5       	mov    ecx,0xd5fffff0
    20f5:	00 00                	add    BYTE PTR [rax],al
    20f7:	00 00                	add    BYTE PTR [rax],al
    20f9:	45 0e                	rex.RB (bad) 
    20fb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    2101:	02 cc                	add    cl,ah
    2103:	0c 07                	or     al,0x7
    2105:	08 00                	or     BYTE PTR [rax],al
    2107:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    210a:	00 00                	add    BYTE PTR [rax],al
    210c:	ac                   	lods   al,BYTE PTR ds:[rsi]
    210d:	00 00                	add    BYTE PTR [rax],al
    210f:	00 6e f1             	add    BYTE PTR [rsi-0xf],ch
    2112:	ff                   	(bad)  
    2113:	ff 4d 00             	dec    DWORD PTR [rbp+0x0]
    2116:	00 00                	add    BYTE PTR [rax],al
    2118:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    211b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    2121:	02 44 0c 07          	add    al,BYTE PTR [rsp+rcx*1+0x7]
    2125:	08 00                	or     BYTE PTR [rax],al
    2127:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    212a:	00 00                	add    BYTE PTR [rax],al
    212c:	cc                   	int3   
    212d:	00 00                	add    BYTE PTR [rax],al
    212f:	00 9b f1 ff ff 19    	add    BYTE PTR [rbx+0x19fffff1],bl
    2135:	00 00                	add    BYTE PTR [rax],al
    2137:	00 00                	add    BYTE PTR [rax],al
    2139:	45 0e                	rex.RB (bad) 
    213b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    2141:	50                   	push   rax
    2142:	0c 07                	or     al,0x7
    2144:	08 00                	or     BYTE PTR [rax],al
    2146:	00 00                	add    BYTE PTR [rax],al
    2148:	44 00 00             	add    BYTE PTR [rax],r8b
    214b:	00 ec                	add    ah,ch
    214d:	00 00                	add    BYTE PTR [rax],al
    214f:	00 a0 f1 ff ff 65    	add    BYTE PTR [rax+0x65fffff1],ah
    2155:	00 00                	add    BYTE PTR [rax],al
    2157:	00 00                	add    BYTE PTR [rax],al
    2159:	46 0e                	rex.RX (bad) 
    215b:	10 8f 02 49 0e 18    	adc    BYTE PTR [rdi+0x180e4902],cl
    2161:	8e 03                	mov    es,WORD PTR [rbx]
    2163:	45 0e                	rex.RB (bad) 
    2165:	20 8d 04 45 0e 28    	and    BYTE PTR [rbp+0x280e4504],cl
    216b:	8c 05 44 0e 30 86    	mov    WORD PTR [rip+0xffffffff86300e44],es        # ffffffff86302fb5 <_end+0xffffffff862fef9d>
    2171:	06                   	(bad)  
    2172:	48 0e                	rex.W (bad) 
    2174:	38 83 07 47 0e 40    	cmp    BYTE PTR [rbx+0x400e4707],al
    217a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    217b:	0e                   	(bad)  
    217c:	38 41 0e             	cmp    BYTE PTR [rcx+0xe],al
    217f:	30 41 0e             	xor    BYTE PTR [rcx+0xe],al
    2182:	28 42 0e             	sub    BYTE PTR [rdx+0xe],al
    2185:	20 42 0e             	and    BYTE PTR [rdx+0xe],al
    2188:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
    218b:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    218e:	08 00                	or     BYTE PTR [rax],al
    2190:	10 00                	adc    BYTE PTR [rax],al
    2192:	00 00                	add    BYTE PTR [rax],al
    2194:	34 01                	xor    al,0x1
    2196:	00 00                	add    BYTE PTR [rax],al
    2198:	c8 f1 ff ff          	enter  0xfff1,0xff
    219c:	05 00 00 00 00       	add    eax,0x0
    21a1:	00 00                	add    BYTE PTR [rax],al
	...

00000000000021a4 <__FRAME_END__>:
    21a4:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .init_array:

0000000000003d80 <__frame_dummy_init_array_entry>:
    3d80:	a0 11 00 00 00 00 00 	movabs al,ds:0xcb00000000000011
    3d87:	00 cb 
    3d89:	12 00                	adc    al,BYTE PTR [rax]
    3d8b:	00 00                	add    BYTE PTR [rax],al
    3d8d:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .fini_array:

0000000000003d90 <__do_global_dtors_aux_fini_array_entry>:
    3d90:	60                   	(bad)  
    3d91:	11 00                	adc    DWORD PTR [rax],eax
    3d93:	00 00                	add    BYTE PTR [rax],al
    3d95:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .dynamic:

0000000000003d98 <_DYNAMIC>:
    3d98:	01 00                	add    DWORD PTR [rax],eax
    3d9a:	00 00                	add    BYTE PTR [rax],al
    3d9c:	00 00                	add    BYTE PTR [rax],al
    3d9e:	00 00                	add    BYTE PTR [rax],al
    3da0:	01 00                	add    DWORD PTR [rax],eax
    3da2:	00 00                	add    BYTE PTR [rax],al
    3da4:	00 00                	add    BYTE PTR [rax],al
    3da6:	00 00                	add    BYTE PTR [rax],al
    3da8:	01 00                	add    DWORD PTR [rax],eax
    3daa:	00 00                	add    BYTE PTR [rax],al
    3dac:	00 00                	add    BYTE PTR [rax],al
    3dae:	00 00                	add    BYTE PTR [rax],al
    3db0:	85 00                	test   DWORD PTR [rax],eax
    3db2:	00 00                	add    BYTE PTR [rax],al
    3db4:	00 00                	add    BYTE PTR [rax],al
    3db6:	00 00                	add    BYTE PTR [rax],al
    3db8:	0c 00                	or     al,0x0
    3dba:	00 00                	add    BYTE PTR [rax],al
    3dbc:	00 00                	add    BYTE PTR [rax],al
    3dbe:	00 00                	add    BYTE PTR [rax],al
    3dc0:	00 10                	add    BYTE PTR [rax],dl
    3dc2:	00 00                	add    BYTE PTR [rax],al
    3dc4:	00 00                	add    BYTE PTR [rax],al
    3dc6:	00 00                	add    BYTE PTR [rax],al
    3dc8:	0d 00 00 00 00       	or     eax,0x0
    3dcd:	00 00                	add    BYTE PTR [rax],al
    3dcf:	00 68 13             	add    BYTE PTR [rax+0x13],ch
    3dd2:	00 00                	add    BYTE PTR [rax],al
    3dd4:	00 00                	add    BYTE PTR [rax],al
    3dd6:	00 00                	add    BYTE PTR [rax],al
    3dd8:	19 00                	sbb    DWORD PTR [rax],eax
    3dda:	00 00                	add    BYTE PTR [rax],al
    3ddc:	00 00                	add    BYTE PTR [rax],al
    3dde:	00 00                	add    BYTE PTR [rax],al
    3de0:	80 3d 00 00 00 00 00 	cmp    BYTE PTR [rip+0x0],0x0        # 3de7 <_DYNAMIC+0x4f>
    3de7:	00 1b                	add    BYTE PTR [rbx],bl
    3de9:	00 00                	add    BYTE PTR [rax],al
    3deb:	00 00                	add    BYTE PTR [rax],al
    3ded:	00 00                	add    BYTE PTR [rax],al
    3def:	00 10                	add    BYTE PTR [rax],dl
    3df1:	00 00                	add    BYTE PTR [rax],al
    3df3:	00 00                	add    BYTE PTR [rax],al
    3df5:	00 00                	add    BYTE PTR [rax],al
    3df7:	00 1a                	add    BYTE PTR [rdx],bl
    3df9:	00 00                	add    BYTE PTR [rax],al
    3dfb:	00 00                	add    BYTE PTR [rax],al
    3dfd:	00 00                	add    BYTE PTR [rax],al
    3dff:	00 90 3d 00 00 00    	add    BYTE PTR [rax+0x3d],dl
    3e05:	00 00                	add    BYTE PTR [rax],al
    3e07:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    3e0a:	00 00                	add    BYTE PTR [rax],al
    3e0c:	00 00                	add    BYTE PTR [rax],al
    3e0e:	00 00                	add    BYTE PTR [rax],al
    3e10:	08 00                	or     BYTE PTR [rax],al
    3e12:	00 00                	add    BYTE PTR [rax],al
    3e14:	00 00                	add    BYTE PTR [rax],al
    3e16:	00 00                	add    BYTE PTR [rax],al
    3e18:	f5                   	cmc    
    3e19:	fe                   	(bad)  
    3e1a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    3e1d:	00 00                	add    BYTE PTR [rax],al
    3e1f:	00 a0 03 00 00 00    	add    BYTE PTR [rax+0x3],ah
    3e25:	00 00                	add    BYTE PTR [rax],al
    3e27:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 3e2d <_DYNAMIC+0x95>
    3e2d:	00 00                	add    BYTE PTR [rax],al
    3e2f:	00 d0                	add    al,dl
    3e31:	04 00                	add    al,0x0
    3e33:	00 00                	add    BYTE PTR [rax],al
    3e35:	00 00                	add    BYTE PTR [rax],al
    3e37:	00 06                	add    BYTE PTR [rsi],al
    3e39:	00 00                	add    BYTE PTR [rax],al
    3e3b:	00 00                	add    BYTE PTR [rax],al
    3e3d:	00 00                	add    BYTE PTR [rax],al
    3e3f:	00 c8                	add    al,cl
    3e41:	03 00                	add    eax,DWORD PTR [rax]
    3e43:	00 00                	add    BYTE PTR [rax],al
    3e45:	00 00                	add    BYTE PTR [rax],al
    3e47:	00 0a                	add    BYTE PTR [rdx],cl
    3e49:	00 00                	add    BYTE PTR [rax],al
    3e4b:	00 00                	add    BYTE PTR [rax],al
    3e4d:	00 00                	add    BYTE PTR [rax],al
    3e4f:	00 f7                	add    bh,dh
    3e51:	00 00                	add    BYTE PTR [rax],al
    3e53:	00 00                	add    BYTE PTR [rax],al
    3e55:	00 00                	add    BYTE PTR [rax],al
    3e57:	00 0b                	add    BYTE PTR [rbx],cl
    3e59:	00 00                	add    BYTE PTR [rax],al
    3e5b:	00 00                	add    BYTE PTR [rax],al
    3e5d:	00 00                	add    BYTE PTR [rax],al
    3e5f:	00 18                	add    BYTE PTR [rax],bl
    3e61:	00 00                	add    BYTE PTR [rax],al
    3e63:	00 00                	add    BYTE PTR [rax],al
    3e65:	00 00                	add    BYTE PTR [rax],al
    3e67:	00 15 00 00 00 00    	add    BYTE PTR [rip+0x0],dl        # 3e6d <_DYNAMIC+0xd5>
	...
    3e75:	00 00                	add    BYTE PTR [rax],al
    3e77:	00 03                	add    BYTE PTR [rbx],al
    3e79:	00 00                	add    BYTE PTR [rax],al
    3e7b:	00 00                	add    BYTE PTR [rax],al
    3e7d:	00 00                	add    BYTE PTR [rax],al
    3e7f:	00 98 3f 00 00 00    	add    BYTE PTR [rax+0x3f],bl
    3e85:	00 00                	add    BYTE PTR [rax],al
    3e87:	00 02                	add    BYTE PTR [rdx],al
    3e89:	00 00                	add    BYTE PTR [rax],al
    3e8b:	00 00                	add    BYTE PTR [rax],al
    3e8d:	00 00                	add    BYTE PTR [rax],al
    3e8f:	00 60 00             	add    BYTE PTR [rax+0x0],ah
    3e92:	00 00                	add    BYTE PTR [rax],al
    3e94:	00 00                	add    BYTE PTR [rax],al
    3e96:	00 00                	add    BYTE PTR [rax],al
    3e98:	14 00                	adc    al,0x0
    3e9a:	00 00                	add    BYTE PTR [rax],al
    3e9c:	00 00                	add    BYTE PTR [rax],al
    3e9e:	00 00                	add    BYTE PTR [rax],al
    3ea0:	07                   	(bad)  
    3ea1:	00 00                	add    BYTE PTR [rax],al
    3ea3:	00 00                	add    BYTE PTR [rax],al
    3ea5:	00 00                	add    BYTE PTR [rax],al
    3ea7:	00 17                	add    BYTE PTR [rdi],dl
    3ea9:	00 00                	add    BYTE PTR [rax],al
    3eab:	00 00                	add    BYTE PTR [rax],al
    3ead:	00 00                	add    BYTE PTR [rax],al
    3eaf:	00 20                	add    BYTE PTR [rax],ah
    3eb1:	07                   	(bad)  
    3eb2:	00 00                	add    BYTE PTR [rax],al
    3eb4:	00 00                	add    BYTE PTR [rax],al
    3eb6:	00 00                	add    BYTE PTR [rax],al
    3eb8:	07                   	(bad)  
    3eb9:	00 00                	add    BYTE PTR [rax],al
    3ebb:	00 00                	add    BYTE PTR [rax],al
    3ebd:	00 00                	add    BYTE PTR [rax],al
    3ebf:	00 30                	add    BYTE PTR [rax],dh
    3ec1:	06                   	(bad)  
    3ec2:	00 00                	add    BYTE PTR [rax],al
    3ec4:	00 00                	add    BYTE PTR [rax],al
    3ec6:	00 00                	add    BYTE PTR [rax],al
    3ec8:	08 00                	or     BYTE PTR [rax],al
    3eca:	00 00                	add    BYTE PTR [rax],al
    3ecc:	00 00                	add    BYTE PTR [rax],al
    3ece:	00 00                	add    BYTE PTR [rax],al
    3ed0:	f0 00 00             	lock add BYTE PTR [rax],al
    3ed3:	00 00                	add    BYTE PTR [rax],al
    3ed5:	00 00                	add    BYTE PTR [rax],al
    3ed7:	00 09                	add    BYTE PTR [rcx],cl
    3ed9:	00 00                	add    BYTE PTR [rax],al
    3edb:	00 00                	add    BYTE PTR [rax],al
    3edd:	00 00                	add    BYTE PTR [rax],al
    3edf:	00 18                	add    BYTE PTR [rax],bl
    3ee1:	00 00                	add    BYTE PTR [rax],al
    3ee3:	00 00                	add    BYTE PTR [rax],al
    3ee5:	00 00                	add    BYTE PTR [rax],al
    3ee7:	00 1e                	add    BYTE PTR [rsi],bl
    3ee9:	00 00                	add    BYTE PTR [rax],al
    3eeb:	00 00                	add    BYTE PTR [rax],al
    3eed:	00 00                	add    BYTE PTR [rax],al
    3eef:	00 08                	add    BYTE PTR [rax],cl
    3ef1:	00 00                	add    BYTE PTR [rax],al
    3ef3:	00 00                	add    BYTE PTR [rax],al
    3ef5:	00 00                	add    BYTE PTR [rax],al
    3ef7:	00 fb                	add    bl,bh
    3ef9:	ff                   	(bad)  
    3efa:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    3efd:	00 00                	add    BYTE PTR [rax],al
    3eff:	00 01                	add    BYTE PTR [rcx],al
    3f01:	00 00                	add    BYTE PTR [rax],al
    3f03:	08 00                	or     BYTE PTR [rax],al
    3f05:	00 00                	add    BYTE PTR [rax],al
    3f07:	00 fe                	add    dh,bh
    3f09:	ff                   	(bad)  
    3f0a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    3f0d:	00 00                	add    BYTE PTR [rax],al
    3f0f:	00 e0                	add    al,ah
    3f11:	05 00 00 00 00       	add    eax,0x0
    3f16:	00 00                	add    BYTE PTR [rax],al
    3f18:	ff                   	(bad)  
    3f19:	ff                   	(bad)  
    3f1a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    3f1d:	00 00                	add    BYTE PTR [rax],al
    3f1f:	00 02                	add    BYTE PTR [rdx],al
    3f21:	00 00                	add    BYTE PTR [rax],al
    3f23:	00 00                	add    BYTE PTR [rax],al
    3f25:	00 00                	add    BYTE PTR [rax],al
    3f27:	00 f0                	add    al,dh
    3f29:	ff                   	(bad)  
    3f2a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    3f2d:	00 00                	add    BYTE PTR [rax],al
    3f2f:	00 c8                	add    al,cl
    3f31:	05 00 00 00 00       	add    eax,0x0
    3f36:	00 00                	add    BYTE PTR [rax],al
    3f38:	f9                   	stc    
    3f39:	ff                   	(bad)  
    3f3a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    3f3d:	00 00                	add    BYTE PTR [rax],al
    3f3f:	00 04 00             	add    BYTE PTR [rax+rax*1],al
	...

Disassembly of section .got:

0000000000003f98 <_GLOBAL_OFFSET_TABLE_>:
    3f98:	98                   	cwde   
    3f99:	3d 00 00 00 00       	cmp    eax,0x0
	...
    3fae:	00 00                	add    BYTE PTR [rax],al
    3fb0:	30 10                	xor    BYTE PTR [rax],dl
    3fb2:	00 00                	add    BYTE PTR [rax],al
    3fb4:	00 00                	add    BYTE PTR [rax],al
    3fb6:	00 00                	add    BYTE PTR [rax],al
    3fb8:	40 10 00             	adc    BYTE PTR [rax],al
    3fbb:	00 00                	add    BYTE PTR [rax],al
    3fbd:	00 00                	add    BYTE PTR [rax],al
    3fbf:	00 50 10             	add    BYTE PTR [rax+0x10],dl
    3fc2:	00 00                	add    BYTE PTR [rax],al
    3fc4:	00 00                	add    BYTE PTR [rax],al
    3fc6:	00 00                	add    BYTE PTR [rax],al
    3fc8:	60                   	(bad)  
    3fc9:	10 00                	adc    BYTE PTR [rax],al
	...

Disassembly of section .data:

0000000000004000 <__data_start>:
	...

0000000000004008 <__dso_handle>:
    4008:	08 40 00             	or     BYTE PTR [rax+0x0],al
    400b:	00 00                	add    BYTE PTR [rax],al
    400d:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .bss:

0000000000004010 <completed.8060>:
	...

0000000000004011 <_ZStL8__ioinit>:
    4011:	00 00                	add    BYTE PTR [rax],al
    4013:	00 00                	add    BYTE PTR [rax],al
    4015:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   5:	28 55 62             	sub    BYTE PTR [rbp+0x62],dl
   8:	75 6e                	jne    78 <_init-0xf88>
   a:	74 75                	je     81 <_init-0xf7f>
   c:	20 39                	and    BYTE PTR [rcx],bh
   e:	2e 33 2e             	xor    ebp,DWORD PTR cs:[rsi]
  11:	30 2d 31 37 75 62    	xor    BYTE PTR [rip+0x62753731],ch        # 62753748 <_end+0x6274f730>
  17:	75 6e                	jne    87 <_init-0xf79>
  19:	74 75                	je     90 <_init-0xf70>
  1b:	31 7e 32             	xor    DWORD PTR [rsi+0x32],edi
  1e:	30 2e                	xor    BYTE PTR [rsi],ch
  20:	30 34 29             	xor    BYTE PTR [rcx+rbp*1],dh
  23:	20 39                	and    BYTE PTR [rcx],bh
  25:	2e 33 2e             	xor    ebp,DWORD PTR cs:[rsi]
  28:	30 00                	xor    BYTE PTR [rax],al
